--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -53,7 +53,6 @@ find_package (BZip2 REQUIRED)
 find_package (ZLIB REQUIRED)
 find_package (OpenSSL REQUIRED)
 find_package (Threads REQUIRED)
-find_package (Gettext REQUIRED)
 find_package (Iconv REQUIRED)
 find_package (Git)
 find_package (Xattr)
@@ -84,7 +83,7 @@ option (USE_JS "QtScript support in Qt interface")
 option (XMLRPC_DAEMON "Make daemon as xmlrpc server" OFF)
 option (PERL_REGEX "Use pcre lib for regex in perl style" OFF)
 option (ENABLE_STACKTRACE "Show stacktrace when program receive SIGSEGV" OFF)
-option (USE_IDNA "Use libidn for punycode generation" ON)
+option (USE_IDNA "Use libidn for punycode generation" OFF)
 option (JSONRPC_DAEMON "Make daemon as jsonrpc server" OFF)
 option (USE_CLI_XMLRPC "Command line interface to control daemon via XMLRPC" OFF)
 option (USE_CLI_JSONRPC "Command line interface to control daemon via JSONRPC" OFF)
@@ -370,11 +369,6 @@ if (USE_CLI_XMLRPC OR USE_CLI_JSONRPC)
 endif ()
 
 
-if(GETTEXT_FOUND)
-    option (UPDATE_PO "Update po files" OFF)
-    option (CREATE_MO "Create mo files" ON)
-    add_subdirectory(cmake)
-endif(GETTEXT_FOUND)
 
 message(STATUS "CMAKE_SYSTEM: ${CMAKE_SYSTEM}")
 message(STATUS "CMAKE_SYSTEM_PROCESSOR: ${CMAKE_SYSTEM_PROCESSOR}")
@@ -390,7 +384,6 @@ message(STATUS "CMAKE will use this libs (and headers) during build:
     openssl (headers): ${OPENSSL_LIBRARIES} (${OPENSSL_INCLUDE_DIR})
     iconv (headers): ${ICONV_LIBRARIES} (${ICONV_INCLUDE_DIR})
     aspell (headers): ${ASPELL_LIBRARIES} (${ASPELL_INCLUDE_DIR})
-    gettext (headers): ${GETTEXT_LIBRARIES} (${GETTEXT_INCLUDE_DIR})
     pcre(cpp) (headers): ${PCRE_LIBRARIES} (${PCRE_INCLUDE_DIR})
     idna (headers): ${IDNA_LIBRARIES} (${IDNA_INCLUDE_DIR})
     ")
--- a/eiskaltdcpp-daemon/CMakeLists.txt
+++ b/eiskaltdcpp-daemon/CMakeLists.txt
@@ -69,6 +69,7 @@ list(APPEND LIBS
         ${JSONRPCLIBS}
         ${Boost_LIBRARIES}
         ${ICONV_LIBRARIES}
+        pthread
         )
 
 target_link_libraries (${PROJECT_NAME} dcpp ${LIBS})
